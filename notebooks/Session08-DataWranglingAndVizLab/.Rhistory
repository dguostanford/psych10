ats4,
ats6,
ats7,
ats10,
ats12,
ats14,
ats15,
ats16,
ats18,
ats18,
ats20,
ats25,
ats27,
ats28
),
re = funs(8 - .)
)
attitudeDataNoNA %>%
mutate_at(
vars(
ats2,
ats4,
ats6,
ats7,
ats10,
ats12,
ats14,
ats15,
ats16,
ats18,
ats18,
ats20,
ats25,
ats27,
ats28
),
funs(8 - .)
)
attitudeDataNoNA <-
attitudeDataNoNA %>%
mutate_at(
vars(
ats2,
ats4,
ats6,
ats7,
ats10,
ats12,
ats14,
ats15,
ats16,
ats18,
ats18,
ats20,
ats25,
ats27,
ats28
),
funs(re = 8 - .)
)
attitudeDataNoNA %>%
select(
ats2,
ats2_re
)
attitudeDataNoNA %>% #check to make sure things went according to plan
select(
ats2,
ats2_re,
ats4,
ats4_re
)
library(tidyverse)
library(assertthat)
attitudeData_file <- 'https://raw.githubusercontent.com/psych10/psych10/master/notebooks/Session08-DataWranglingAndVizLab/statsAttitude.txt'
attitudeData <- read_tsv(attitudeData_file)
glimpse(attitudeData)
nQuestions <- 29 # other than the first two columns, the rest of the columns are for the 29 questions in the statistics attitude survey; we'll use this below to rename these columns based on their question number
attitudeData <-
attitudeData %>%
rename(
Year = 1, # The first column is the year
StatsBefore = 2 # The second column indicates whether the person took stats before
) %>%
rename_at(
vars(-Year, -StatsBefore), # rename all the columns except Year and StatsBefore
funs(paste0('ats', 1:nQuestions)) #rename by pasting the word "stat" and the number
)
# print out the column names
names(attitudeData)
#check out the data again
glimpse(attitudeData)
# let's add a participant ID so that we will be able to identify them later
attitudeData <-
attitudeData %>%
rownames_to_column(var = 'ID')
head(attitudeData)
# compute the number of NAs for each participant
attitudeData <-
attitudeData %>%
mutate(
numNA = rowSums(is.na(.)) # we use the . symbol to tell the is.na function to look at the entire data frame
)
# present a table with counts of the number of missing responses
attitudeData %>%
count(numNA)
attitudeData %>%
filter(numNA > 0)
# this is equivalent to drop_na(attitudeData)
attitudeDataNoNA <-
attitudeData %>%
drop_na() %>%
select(-numNA)
glimpse(attitudeDataNoNA)
attitudeDataNoNA %>%
mutate(
ats2_re = 8 - ats2,
ats4_re = 8 - ats4,
ats6_re = 8 - ats6,
ats7_re = 8 - ats7,
ats10_re = 8 - ats10,
ats12_re = 8 - ats12,
ats14_re = 8 - ats14,
ats15_re = 8 - ats15,
ats16_re = 8 - ats16,
ats18_re = 8 - ats18,
ats20_re = 8 - ats20,
ats25_re = 8 - ats25,
ats27_re = 8 - ats27,
ats28_re = 8 - ats28
)
ats_recode <- #create a vector of variables to recode
c(
ats2,
ats4,
ats6,
ats7,
ats10,
ats12,
ats14,
ats15,
ats16,
ats18,
ats18,
ats20,
ats25,
ats27,
ats28
)
ats_recode <- #create a vector of variables to recode
c(
"ats2",
"ats4",
"ats6",
"ats7",
"ats10",
"ats12",
"ats14",
"ats15",
"ats16",
"ats18",
"ats20",
"ats25",
"ats27",
"ats28"
)
attitudeDataNoNA <-
attitudeDataNoNA %>%
mutate_at(
vars(ats_recode), # the variables you want to recode
funs(re = 8 - .) # the function to apply to each variable
)
attitudeDataNoNA %>% #check to make sure things went according to plan
select(
ats2,
ats2_re,
ats4,
ats4_re
)
attitudeData_long <-
attitudeDataNoNA %>%
select(-ats_recode)
glimpse(attitudeData_long)
gather(
key = question, # key refers to the new variable containing the question number
value = response, # value refers to the new response variable
-ID, -Year, -StatsBefore #the only variables we DON'T want to gather
)
attitudeData_long <-
attitudeDataNoNA %>%
select(-ats_recode) %>% #remove the raw variables that you recoded
gather(
key = question, # key refers to the new variable containing the question number
value = response, # value refers to the new response variable
-ID, -Year, -StatsBefore #the only variables we DON'T want to gather
)
attitudeData_long %>%
slice(1:20)
glimpse(attitudeData_long)
attitudeData_wide <-
attitudeData_long %>%
spread(
key = question, #key refers to the variable indicating which question each response belongs to
value = response
)
attitudeData_wide %>%
slice(1:20)
attitudeDataTidy %>%
ggplot(aes(x = response, y = ..density..)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq.int(1, 7, 1))
attitudeData_long %>%
ggplot(aes(x = response, y = ..density..)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq.int(1, 7, 1))
assert_that(all(attitudeDataTidy$response %in% c(1:7)))
attitudeDataNoNA %>% #check to make sure things went according to plan
select(
ats2,
ats2_re,
ats4,
ats4_re
)
attitudeDataTidy %>%
assert_that(all(response %in% c(1:7)))
attitudeDataNoNA %>%
assert_that(all(ats1:ats28_re %in% c(1:7)))
attitudeDataNoNA %>%
assert_that(ats1:ats28_re %in% c(1:7))
?assert_that
attitudeDataNoNA %>%
assert_that(all(ats1:ats28_re %in% c(1:7)))
attitudeDataNoNA %>%
select(-ID, -Year, - StatsBefore) %>%
assert_that(all(. %in% c(1:7)))
attitudeDataNoNA %>%
select(-ID, -Year, -StatsBefore) %>%
assert_that(all(. %in% c(1:7)))
attitudeDataNoNA %>%
select(-ID, -Year, -StatsBefore)
attitudeDataTidy %>%
assert_that(all(Year %in% c(1:4)))
assert_that(all(attitudeDataNoNA$awc1:attitudeDataNoNA$awc28_re. %in% c(1:7)))
assert_that(all(attitudeDataNoNA$awc1:attitudeDataNoNA$awc28_re %in% c(1:7)))
assert_that(all(c(attitudeDataNoNA$awc1:attitudeDataNoNA$awc28_re) %in% c(1:7)))
assert_that(all(c(attitudeDataNoNA$awc1 %in% c(1:7)))
assert_that(all(c(attitudeDataNoNA$awc1 %in% c(1:7))
assert_that(all(c(attitudeDataNoNA$awc1 %in% c(1:7))
assert_that(all(c(attitudeDataNoNA$awc1 %in% c(1:7))
assert_that(all(c(attitudeDataNoNA$awc1 %in% c(1:7))))
assert_that(all(attitudeDataNoNA$awc1 %in% c(1:7)))
assert_that(all(attitudeDataNoNA$awc1attitudeDataNoNA$awc28_re %in% c(1:7)))
assert_that(all(attitudeDataNoNA$awc1:attitudeDataNoNA$awc28_re %in% c(1:7)))
assert_that(all(attitudeDataNoNA$awc1attitudeDataNoNA$awc28_re %in% c(1:7)))
assert_that(all(attitudeDataNoNA$awc1:attitudeDataNoNA$awc28_re %in% c(1:7)))
attitudeDataNoNA %>%
filter_at(
vars(ats1:ats28_re),
funs(. < 1 & . >7)
)
attitudeDataNoNA %>%
summarise_at(
vars(ats1:ats28_re),
funs(min, max)
)
attitudeDataNoNA %>%
summarise_at(
vars(Year),
funs(min, max)
)
attitudeDataNoNA %>%
select(contains("re"))
attitudeDataNoNA %>%
select(contains("re")) %>%
filter(ats2_re:ats_28re %in% ats_recode)
glimpse(attitudeDataNoNA)
attitudeDataNoNA %>%
select(contains("re")) %>%
filter(ats2_re:ats28_re %in% ats_recode)
attitudeDataNoNA %>%
select(contains("re")) %>%
names()
library(tidyverse)
library(assertthat)
attitudeData_file <- 'https://raw.githubusercontent.com/psych10/psych10/master/notebooks/Session08-DataWranglingAndVizLab/statsAttitude.txt'
attitudeData <- read_tsv(attitudeData_file)
glimpse(attitudeData)
nQuestions <- 29 # other than the first two columns, the rest of the columns are for the 29 questions in the statistics attitude survey; we'll use this below to rename these columns based on their question number
attitudeData <-
attitudeData %>%
rename(
Year = 1, # The first column is the year
StatsBefore = 2 # The second column indicates whether the person took stats before
) %>%
rename_at(
vars(-Year, -StatsBefore), # rename all the columns except Year and StatsBefore
funs(paste0('ats', 1:nQuestions)) #rename by pasting the word "stat" and the number
)
# print out the column names
names(attitudeData)
#check out the data again
glimpse(attitudeData)
# let's add a participant ID so that we will be able to identify them later
attitudeData <-
attitudeData %>%
rownames_to_column(var = 'ID')
head(attitudeData)
# compute the number of NAs for each participant
attitudeData <-
attitudeData %>%
mutate(
numNA = rowSums(is.na(.)) # we use the . symbol to tell the is.na function to look at the entire data frame
)
# present a table with counts of the number of missing responses
attitudeData %>%
count(numNA)
attitudeData %>%
filter(numNA > 0)
# this is equivalent to drop_na(attitudeData)
attitudeDataNoNA <-
attitudeData %>%
drop_na() %>%
select(-numNA)
glimpse(attitudeDataNoNA)
attitudeDataNoNA %>%
mutate(
ats2_re = 8 - ats2,
ats4_re = 8 - ats4,
ats6_re = 8 - ats6,
ats7_re = 8 - ats7,
ats10_re = 8 - ats10,
ats12_re = 8 - ats12,
ats14_re = 8 - ats14,
ats15_re = 8 - ats15,
ats16_re = 8 - ats16,
ats18_re = 8 - ats18,
ats20_re = 8 - ats20,
ats25_re = 8 - ats25,
ats27_re = 8 - ats27,
ats28_re = 8 - ats28
)
ats_recode <- #create a vector of the names of the variables to recode
c(
"ats2",
"ats4",
"ats6",
"ats7",
"ats10",
"ats12",
"ats14",
"ats15",
"ats16",
"ats18",
"ats20",
"ats25",
"ats27",
"ats28"
)
attitudeDataNoNA <-
attitudeDataNoNA %>%
mutate_at(
vars(ats_recode), # the variables you want to recode
funs(re = 8 - .) # the function to apply to each variable
)
attitudeDataNoNA %>%
select(
ats2,
ats2_re,
ats4,
ats4_re
)
attitudeDataNoNA %>%
summarise_at(
vars(ats1:ats28_re),
funs(min, max)
)
attitudeDataNoNA %>%
summarise_at(
vars(Year),
funs(min, max)
)
attitudeDataNoNA %>%
select(contains("_re")) %>%
names()
attitudeDataNoNA %>%
select(contains("_re")) %>%
names() %>%
filter(. %in% ats_recode)
attitudeDataNoNA %>%
select(contains("_re")) %>%
names()
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all(
str_replace(. "_re", "")
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all(
str_replace(., "_re", "")
)
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all(
str_replace("_re", "")
)
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all(
str_replace("_re", " ")
)
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all(
. %>%
str_replace("_re", " ")
)
recoded_ats <-
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all( #rename all of the variables
. %>%
str_replace("_re", " ") #replace "_re" with nothing
) %>%
names()
recoded_ats %in% ats_recode
recoded_ats
recoded_ats <-
attitudeDataNoNA %>%
select(contains("_re")) %>%
rename_all( #rename all of the variables
. %>%
str_replace("_re", "") #replace "_re" with nothing
) %>%
names()
recoded_ats %in% ats_recode
styler:::style_selection()
attitudeData_long %>%
group_by(ID) %>%
summarize(
mean_response = mean(response),
year = unique(Year)
)
attitudeData_long %>%
group_by(ID, year) %>%
summarize(
mean_response = mean(response)
)
attitudeData_long %>%
group_by(ID, Year) %>%
summarize(
mean_response = mean(response)
)
attitudeData_agg <-
attitudeData_long
attitudeData_agg <-
attitudeData_long %>%
group_by(ID, Year) %>%
summarize(
mean_response = mean(response)
)
attitudeData_agg
attitudeData_agg %>%
ggplot(aes(meanResponse)) +
geom_density()
attitudeData_agg %>%
ggplot(aes(mean_response)) +
geom_density()
ggplot(aes(x = response) +
attitudeData_long %>%
ggplot(aes(x = response)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq.int(1, 7, 1))
attitudeData_long %>%
attitudeData_long %>%
ggplot(aes(x = response)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq.int(1, 7, 1))
attitudeData_agg %>%
ggplot(aes(mean_response, color = Year)) +
geom_density()
attitudeData_agg %>%
ggplot(aes(mean_response, color = Year)) +
geom_density()
attitudeData_agg %>%
ggplot(aes(mean_response, color = factor(Year))) +
geom_density()
attitudeData_agg %>%
ggplot(aes(Year, mean_response)) +
geom_line()
attitudeData_agg %>%
ggplot(aes(mean_response, color = factor(Year))) +
geom_density()
attitudeData_agg %>%
group_by(Year) %>%
summarise(
mean_response = mean(mean_response)
) %>%
ggplot(aes(mean_response, color = factor(Year))) +
geom_line()
attitudeData_agg %>%
group_by(Year) %>%
summarise(
mean_response = mean(mean_response)
) %>%
ggplot(aes(Year, mean_response)) +
geom_line()
attitudeData_agg %>%
ggplot(aes(mean_response, fill = factor(Year))) +
geom_density()
attitudeData_agg %>%
ggplot(aes(mean_response, color = factor(Year))) +
geom_density()
